service:
  name: runk

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline-ssm
  - serverless-offline

custom:
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
    excludedFiles: src/**/*.test.*
  region: ${opt:region, self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  serverless-offline:
    port: 3001
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

package:
  individually: false

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  environment:
    REGION: ${self:custom.region}
    STAGE: ${self:custom.stage}
    DB_TABLE_USER: ${self:service.name}-${self:custom.stage}-user
    DB_TABLE_AUTHORIZER: ${self:service.name}-${self:custom.stage}-authorizer
    DB_TABLE_LEAGUE: ${self:service.name}-${self:custom.stage}-league
    DB_TABLE_MATCH: ${self:service.name}-${self:custom.stage}-match
    JWT_SECRET: ${ssm:/runk/${self:custom.stage}/jwtSecret}
    GOOGLE_CLIENT_ID: ${ssm:/runk/${self:custom.stage}/googleClientId}
    GOOGLE_CLIENT_SECRET: ${ssm:/runk/${self:custom.stage}/googleClientSecret}
    GOOGLE_REDIRECT_URL: ${ssm:/runk/${self:custom.stage}/googleRedirectUrl}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ UserTable, Arn ]
        - "Fn::GetAtt": [ AuthorizerTable, Arn ]
        - "Fn::GetAtt": [ MatchTable, Arn ]
        - "Fn::GetAtt": [ LeagueTable, Arn ]
    - Effect: Allow
      Action:
        - ssm:GetParameter

functions:
  - ${file(resources/functions-auth.yml)}
  - ${file(resources/functions-league.yml)}
  - ${file(resources/functions-match.yml)}
  - ${file(resources/functions-user.yml)}
  - ${file(resources/functions-misc.yml)}

resources:
  - ${file(resources/dynamodb.yml)}
